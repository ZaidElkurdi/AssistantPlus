/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI
 */

@class <AFUISiriSessionDelegate>, <AFUISiriSessionLocalDataSource>, <AFUISiriSessionLocalDelegate>, AFConnection, AFUISpeechSynthesis, AFUIStateMachine, NSObject<OS_dispatch_queue>, NSString;

@interface AFUISiriSession : NSObject <AFAssistantUIService, AFSpeechDelegate, AFUIStateMachineDelegate, AFUISpeechSynthesisLocalDelegate, AFUISiriSession> {
    AFConnection *_connection;
    <AFUISiriSessionDelegate> *_delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    <AFUISiriSessionLocalDataSource> *_localDataSource;
    <AFUISiriSessionLocalDelegate> *_localDelegate;
    AFUISpeechSynthesis *_speechSynthesis;
    AFUIStateMachine *_stateMachine;
    bool_currentRequestDidPresent;
    bool_eyesFree;
}

@property(getter=_connection,readonly) AFConnection * connection;
@property(copy,readonly) NSString * debugDescription;
@property(retain) <AFUISiriSessionDelegate> * delegate;
@property(copy,readonly) NSString * description;
@property(getter=isEyesFree) bool eyesFree;
@property(readonly) unsigned long long hash;
@property <AFUISiriSessionLocalDataSource> * localDataSource;
@property <AFUISiriSessionLocalDelegate> * localDelegate;
@property(readonly) Class superclass;

+ (unsigned long long)availabilityState;
+ (void)beginMonitoringSiriAvailability;
+ (id)effectiveCoreLocationBundle;

- (void).cxx_destruct;
- (id)_connection;
- (void)_didChangeDialogPhase:(id)arg1;
- (void)_handleRequestUpdateViewsCommand:(id)arg1;
- (void)_handleUnlockDeviceCommand:(id)arg1;
- (bool)_hasActiveRequest;
- (void)_outputVoiceDidChange:(id)arg1;
- (void)_performAceCommand:(id)arg1 forRequestUpdateViewsCommand:(id)arg2 afterDelay:(double)arg3;
- (void)_performBlockWithDelegate:(id)arg1;
- (void)_performTransitionForEvent:(long long)arg1;
- (id)_preparedSpeechRequestWithRequestOptions:(id)arg1;
- (void)_requestContextWithCompletion:(id)arg1;
- (void)_requestDidFinishWithError:(id)arg1;
- (void)_requestWillStart;
- (void)_siriNetworkAvailabilityDidChange:(id)arg1;
- (void)_startContinuityRequestWithInfo:(id)arg1;
- (void)_startDirectActionRequestWithString:(id)arg1 appID:(id)arg2 withMessagesContext:(id)arg3;
- (void)_startRequestWithBlock:(id)arg1;
- (void)_startRequestWithFinalOptions:(id)arg1;
- (void)_startRequestWithText:(id)arg1;
- (void)_startSpeechPronunciationRequestWithContext:(id)arg1 options:(id)arg2;
- (void)_startSpeechRequestWithOptions:(id)arg1;
- (void)_startSpeechRequestWithSpeechFileAtURL:(id)arg1;
- (long long)_state;
- (id)_stateMachine;
- (void)_voiceOverStatusDidChange:(id)arg1;
- (void)assistantConnection:(id)arg1 didChangeAudioSessionID:(unsigned int)arg2;
- (void)assistantConnection:(id)arg1 didFinishAcousticIDRequestWithSuccess:(bool)arg2;
- (void)assistantConnection:(id)arg1 openURL:(id)arg2 completion:(id)arg3;
- (void)assistantConnection:(id)arg1 receivedCommand:(id)arg2;
- (void)assistantConnection:(id)arg1 requestFailedWithError:(id)arg2 requestClass:(id)arg3;
- (void)assistantConnection:(id)arg1 shouldSpeak:(bool)arg2;
- (void)assistantConnection:(id)arg1 speechRecognized:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecognizedPartialResult:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecordingDidBeginOnAVRecordRoute:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecordingDidChangeAVRecordRoute:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecordingDidFail:(id)arg2;
- (void)assistantConnectionDidChangeAudioRecordingPower:(id)arg1;
- (void)assistantConnectionDidDetectMusic:(id)arg1;
- (void)assistantConnectionDismissAssistant:(id)arg1;
- (void)assistantConnectionRequestFinished:(id)arg1;
- (void)assistantConnectionRequestWillStart:(id)arg1;
- (void)assistantConnectionSpeechRecordingDidCancel:(id)arg1;
- (void)assistantConnectionSpeechRecordingDidEnd:(id)arg1;
- (void)assistantConnectionSpeechRecordingWillBegin:(id)arg1;
- (void)cancelSpeechRequest;
- (void)clearContext;
- (void)dealloc;
- (id)delegate;
- (void)end;
- (void)forceAudioSessionActive;
- (id)initWithConnection:(id)arg1 delegateQueue:(id)arg2;
- (bool)isEyesFree;
- (bool)isListening;
- (bool)isPreventingActivationGesture;
- (id)localDataSource;
- (id)localDelegate;
- (void)performAceCommand:(id)arg1 conflictHandler:(id)arg2;
- (void)performAceCommand:(id)arg1;
- (void)preheat;
- (void)recordMetrics:(id)arg1;
- (float)recordingPowerLevel;
- (void)requestDidPresent;
- (void)resetContext;
- (void)resultDidChangeForAceCommand:(id)arg1;
- (void)rollbackClearContext;
- (void)sendReplyCommand:(id)arg1;
- (void)setAlertContext;
- (void)setApplicationContext;
- (void)setDelegate:(id)arg1;
- (void)setEyesFree:(bool)arg1;
- (void)setIsStark:(bool)arg1;
- (void)setLocalDataSource:(id)arg1;
- (void)setLocalDelegate:(id)arg1;
- (void)setLockState:(unsigned long long)arg1;
- (void)setOverriddenApplicationContext:(id)arg1 withSMSContext:(id)arg2;
- (id)speechSynthesis;
- (void)speechSynthesisWillStartSpeaking:(id)arg1;
- (void)startCorrectedRequestWithText:(id)arg1 correctionIdentifier:(id)arg2;
- (void)startRequestWithOptions:(id)arg1;
- (id)stateMachine:(id)arg1 descriptionForEvent:(long long)arg2;
- (void)stateMachine:(id)arg1 didTransitionFromState:(long long)arg2 forEvent:(long long)arg3;
- (void)stopRecordingSpeech;
- (void)stopRequestWithOptions:(id)arg1;
- (void)telephonyRequestCompleted;
- (id)underlyingConnection;
- (void)updateRequestOptions:(id)arg1;

@end
